name: build

on: [ pull_request ]

jobs:
  static-analysis:
    name: Rector
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          tools: pecl
          extensions: mbstring, pdo, pdo_sqlite
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Static Analysis
        run: |
          vendor/bin/rector --dry-run

  tests:
    name: Test PHP ${{ matrix.php-versions }} with Code Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: pcov
          tools: pecl
          extensions: mbstring, pdo, pdo_sqlite
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Execute Tests
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Upload coverage to Codecov
        continue-on-error: true # if is fork
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
